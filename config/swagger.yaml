swagger: "2.0"
info:
  version: 1.0.0
  title: Urban api
  description: This is the api for `Urban it` app
  termsOfService: http://urban-it.io/terms/
  contact:
    name: Urban it API Team
    email: apiteam@urban-it.io
    url: http://urban-it.io
host: localhost:1344
basePath: /
schemes:
  - http
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
Content-Type: application/x-www-form-urlencoded
paths:
  /user:
    get:
      tags:
        - user
      description: |
        Returns all users
      operationId: findUsers
      responses:
        "200":
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - user
      description: Creates a new user in the store.
      operationId: addUser
      parameters:
        - name: username
          type: string
          in: formData
          required: true
        - name: password
          type: string
          in: formData
          required: true
        - name: email
          type: string
          in: formData
          required: true
        - name: description
          type: string
          in: formData
          required: true
        - name: firstName
          type: string
          in: formData
          required: true
        - name: lastName
          type: string
          in: formData
          required: true
      responses:
        "201":
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/{idUser}:
    get:
      tags:
        - user
      description: Returns a user based on a single ID
      operationId: findOneUserById
      parameters:
        - name: idUser
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - user
      description: Update a user in the store.
      operationId: updateUser
      parameters:
        - name: idUser
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: username
          type: string
          in: formData
        - name: password
          type: string
          in: formData
        - name: email
          type: string
          in: formData
        - name: description
          type: string
          in: formData
        - name: firstName
          type: string
          in: formData
        - name: lastName
          type: string
          in: formData
      responses:
        "200":
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - user
      description: Delete a user in the store.
      operationId: deleteUser
      parameters:
        - name: idUser
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /profile:
    get:
      tags:
        - profile
      description: Return all profile
      operationId: findProfile
      responses:
        "200":
          description: profile response
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - profile
      description: Creates a new profile in the store.
      operationId: addProfile
      parameters:
        - name: idUser
          type: integer
          in: formData
          required: true
        - name: sport
          type: string
          in: formData
          required: true
        - name: size
          type: integer
          in: formData
          required: true
        - name: weight
          type: integer
          in: formData
          required: true
        - name: numero
          type: integer
          in: formData
          required: true
        - name: position
          type: string
          in: formData
          required: true
      responses:
        "201":
          description: profile response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /profile/{idProfile}:
    get:
      tags:
        - profile
      description: Returns a profile based on a single ID
      operationId: findOneProfileById
      parameters:
        - name: idProfile
          in: path
          description: ID of profile to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: profile response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - profile
      description: Update a profile in the store.
      operationId: updateProfile
      parameters:
        - name: idProfile
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: sport
          type: string
          in: formData
        - name: size
          type: integer
          in: formData
        - name: weight
          type: integer
          in: formData
        - name: numero
          type: integer
          in: formData
        - name: position
          type: string
          in: formData
      responses:
        "200":
          description: profile response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - profile
      description: Delete a profile in the store.
      operationId: deleteProfile
      parameters:
        - name: idProfile
          in: path
          description: ID of profile to delete
          required: true
          type: integer
          format: int64
  /profile/byUser/{idUser}:
    get:
      tags:
        - profile
      description: Returns profiles based on a user
      operationId: findOneProfileByUser
      parameters:
        - name: idUser
          in: path
          description: ID of user with profiles to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: profile response
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /profile/jointeam:
    post:
      tags:
        - profile
      description: Join a team with a profile.
      operationId: profileJoinTeam
      parameters:
        - name: idProfile
          type: integer
          in: formData
          required: true
      responses:
        "200":
          description: join team response
          schema:
            $oneOf:
            - "$ref": "#/definitions/Team"
            - "$ref": "#/definitions/Match"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team:
    get:
      tags:
        - team
      description: |
        Returns all teams
      operationId: findTeam
      responses:
        "200":
          description: team response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - team
      description: Creates a new team in the store.
      operationId: addTeam
      parameters:
        - name: teamName
          type: string
          in: formData
        - name: sport
          type: string
          in: formData
          required: true
      responses:
        "201":
          description: team response
          schema:
            $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team/{idTeam}:
    get:
      tags:
        - team
      description: Returns team based on a single Id
      operationId: findTeamById
      parameters:
        - name: idTeam
          in: path
          description: ID of team to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: team response
          schema:
            $ref: '#/definitions/Team'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team/jointeam:
    post:
      tags:
        - team
      description: Join a team with a team.
      operationId: teamJoinTeam
      parameters:
        - name: idTeam
          type: integer
          in: formData
          required: true
        - name: idTeamJoin
          type: integer
          in: formData
      responses:
        "200":
          description: join team response
          schema:
            $oneOf:
            - "$ref": "#/definitions/Team"
            - "$ref": "#/definitions/Match"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /team/joinmatch:
    post:
      tags:
        - team
      description: Join a match with a team.
      operationId: teamJoinMatch
      parameters:
        - name: idTeam
          type: integer
          in: formData
          required: true
      responses:
        "200":
          description: join team response
          schema:
            $ref: '#/definitions/Match'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /match:
    get:
      tags:
        - match
      description: |
        Returns all matchs
      operationId: findMatch
      responses:
        "200":
          description: match response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64

  NewUser:
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
      description:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  Profile:
    allOf:
      - $ref: '#/definitions/NewProfile'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64

  NewProfile:
    properties:
      sport:
        type: string
      size:
        type: integer
      weight:
        type: integer
      numero:
        type: integer
      position:
        type: string
      idUser:
        type: integer
        format: int64
  
  Team:
    allOf:
      - $ref: '#/definitions/NewTeam'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64

  NewTeam:
    properties:
      teamName:
        type: string
      ranking:
        type: integer
      sport:
        type: string
      isFill:
        type: boolean
      profileCount:
        type: integer

  Match:
    allOf:
      - $ref: '#/definitions/NewMatch'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64

  NewMatch:
    properties:
      ranking:
        type: integer
      sport:
        type: string
      isFill:
        type: boolean
      teamCount:
        type: integer

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string